#pragma warning disable 1591
//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by a tool.
//     Runtime Version:4.0.30319.42000
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

namespace Tarkvaratehnika
{
	using System.Data.Linq;
	using System.Data.Linq.Mapping;
	using System.Data;
	using System.Collections.Generic;
	using System.Reflection;
	using System.Linq;
	using System.Linq.Expressions;
	using System.ComponentModel;
	using System;
	
	
	[global::System.Data.Linq.Mapping.DatabaseAttribute(Name="DormMatch")]
	public partial class DataClasses1DataContext : System.Data.Linq.DataContext
	{
		
		private static System.Data.Linq.Mapping.MappingSource mappingSource = new AttributeMappingSource();
		
    #region Extensibility Method Definitions
    partial void OnCreated();
    partial void InsertRegistration(Registration instance);
    partial void UpdateRegistration(Registration instance);
    partial void DeleteRegistration(Registration instance);
    partial void InsertCompatibility(Compatibility instance);
    partial void UpdateCompatibility(Compatibility instance);
    partial void DeleteCompatibility(Compatibility instance);
    partial void InsertPersonality(Personality instance);
    partial void UpdatePersonality(Personality instance);
    partial void DeletePersonality(Personality instance);
    #endregion
		
		public DataClasses1DataContext() : 
				base(global::System.Configuration.ConfigurationManager.ConnectionStrings["DormMatchConnectionString"].ConnectionString, mappingSource)
		{
			OnCreated();
		}
		
		public DataClasses1DataContext(string connection) : 
				base(connection, mappingSource)
		{
			OnCreated();
		}
		
		public DataClasses1DataContext(System.Data.IDbConnection connection) : 
				base(connection, mappingSource)
		{
			OnCreated();
		}
		
		public DataClasses1DataContext(string connection, System.Data.Linq.Mapping.MappingSource mappingSource) : 
				base(connection, mappingSource)
		{
			OnCreated();
		}
		
		public DataClasses1DataContext(System.Data.IDbConnection connection, System.Data.Linq.Mapping.MappingSource mappingSource) : 
				base(connection, mappingSource)
		{
			OnCreated();
		}
		
		public System.Data.Linq.Table<Registration> Registrations
		{
			get
			{
				return this.GetTable<Registration>();
			}
		}
		
		public System.Data.Linq.Table<Compatibility> Compatibilities
		{
			get
			{
				return this.GetTable<Compatibility>();
			}
		}
		
		public System.Data.Linq.Table<Personality> Personalities
		{
			get
			{
				return this.GetTable<Personality>();
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.Registration")]
	public partial class Registration : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _ID;
		
		private string _Email;
		
		private string _Password;
		
		private string _UserName;
		
		private string _FirstName;
		
		private string _LastName;
		
		private string _DateOfBirth;
		
		private string _Citizenship;
		
		private string _City;
		
		private string _Gender;
		
		private string _Relationship;
		
		private string _DriverLicense;
		
		private string _Cooking;
		
		private string _Party;
		
		private string _Music1;
		
		private string _Music2;
		
		private string _Music3;
		
		private string _Movie1;
		
		private string _Movie2;
		
		private string _Movie3;
		
		private string _TV1;
		
		private string _TV2;
		
		private string _TV3;
		
		private string _Personality;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnIDChanging(int value);
    partial void OnIDChanged();
    partial void OnEmailChanging(string value);
    partial void OnEmailChanged();
    partial void OnPasswordChanging(string value);
    partial void OnPasswordChanged();
    partial void OnUserNameChanging(string value);
    partial void OnUserNameChanged();
    partial void OnFirstNameChanging(string value);
    partial void OnFirstNameChanged();
    partial void OnLastNameChanging(string value);
    partial void OnLastNameChanged();
    partial void OnDateOfBirthChanging(string value);
    partial void OnDateOfBirthChanged();
    partial void OnCitizenshipChanging(string value);
    partial void OnCitizenshipChanged();
    partial void OnCityChanging(string value);
    partial void OnCityChanged();
    partial void OnGenderChanging(string value);
    partial void OnGenderChanged();
    partial void OnRelationshipChanging(string value);
    partial void OnRelationshipChanged();
    partial void OnDriverLicenseChanging(string value);
    partial void OnDriverLicenseChanged();
    partial void OnCookingChanging(string value);
    partial void OnCookingChanged();
    partial void OnPartyChanging(string value);
    partial void OnPartyChanged();
    partial void OnMusic1Changing(string value);
    partial void OnMusic1Changed();
    partial void OnMusic2Changing(string value);
    partial void OnMusic2Changed();
    partial void OnMusic3Changing(string value);
    partial void OnMusic3Changed();
    partial void OnMovie1Changing(string value);
    partial void OnMovie1Changed();
    partial void OnMovie2Changing(string value);
    partial void OnMovie2Changed();
    partial void OnMovie3Changing(string value);
    partial void OnMovie3Changed();
    partial void OnTV1Changing(string value);
    partial void OnTV1Changed();
    partial void OnTV2Changing(string value);
    partial void OnTV2Changed();
    partial void OnTV3Changing(string value);
    partial void OnTV3Changed();
    partial void OnPersonalityChanging(string value);
    partial void OnPersonalityChanged();
    #endregion
		
		public Registration()
		{
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ID", AutoSync=AutoSync.OnInsert, DbType="Int NOT NULL IDENTITY", IsPrimaryKey=true, IsDbGenerated=true)]
		public int ID
		{
			get
			{
				return this._ID;
			}
			set
			{
				if ((this._ID != value))
				{
					this.OnIDChanging(value);
					this.SendPropertyChanging();
					this._ID = value;
					this.SendPropertyChanged("ID");
					this.OnIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Email", DbType="NVarChar(MAX) NOT NULL", CanBeNull=false)]
		public string Email
		{
			get
			{
				return this._Email;
			}
			set
			{
				if ((this._Email != value))
				{
					this.OnEmailChanging(value);
					this.SendPropertyChanging();
					this._Email = value;
					this.SendPropertyChanged("Email");
					this.OnEmailChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Password", DbType="NVarChar(MAX) NOT NULL", CanBeNull=false)]
		public string Password
		{
			get
			{
				return this._Password;
			}
			set
			{
				if ((this._Password != value))
				{
					this.OnPasswordChanging(value);
					this.SendPropertyChanging();
					this._Password = value;
					this.SendPropertyChanged("Password");
					this.OnPasswordChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_UserName", DbType="NVarChar(MAX) NOT NULL", CanBeNull=false)]
		public string UserName
		{
			get
			{
				return this._UserName;
			}
			set
			{
				if ((this._UserName != value))
				{
					this.OnUserNameChanging(value);
					this.SendPropertyChanging();
					this._UserName = value;
					this.SendPropertyChanged("UserName");
					this.OnUserNameChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_FirstName", DbType="NVarChar(MAX) NOT NULL", CanBeNull=false)]
		public string FirstName
		{
			get
			{
				return this._FirstName;
			}
			set
			{
				if ((this._FirstName != value))
				{
					this.OnFirstNameChanging(value);
					this.SendPropertyChanging();
					this._FirstName = value;
					this.SendPropertyChanged("FirstName");
					this.OnFirstNameChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_LastName", DbType="NVarChar(MAX) NOT NULL", CanBeNull=false)]
		public string LastName
		{
			get
			{
				return this._LastName;
			}
			set
			{
				if ((this._LastName != value))
				{
					this.OnLastNameChanging(value);
					this.SendPropertyChanging();
					this._LastName = value;
					this.SendPropertyChanged("LastName");
					this.OnLastNameChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_DateOfBirth", DbType="NVarChar(MAX) NOT NULL", CanBeNull=false)]
		public string DateOfBirth
		{
			get
			{
				return this._DateOfBirth;
			}
			set
			{
				if ((this._DateOfBirth != value))
				{
					this.OnDateOfBirthChanging(value);
					this.SendPropertyChanging();
					this._DateOfBirth = value;
					this.SendPropertyChanged("DateOfBirth");
					this.OnDateOfBirthChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Citizenship", DbType="NVarChar(MAX) NOT NULL", CanBeNull=false)]
		public string Citizenship
		{
			get
			{
				return this._Citizenship;
			}
			set
			{
				if ((this._Citizenship != value))
				{
					this.OnCitizenshipChanging(value);
					this.SendPropertyChanging();
					this._Citizenship = value;
					this.SendPropertyChanged("Citizenship");
					this.OnCitizenshipChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_City", DbType="NVarChar(MAX) NOT NULL", CanBeNull=false)]
		public string City
		{
			get
			{
				return this._City;
			}
			set
			{
				if ((this._City != value))
				{
					this.OnCityChanging(value);
					this.SendPropertyChanging();
					this._City = value;
					this.SendPropertyChanged("City");
					this.OnCityChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Gender", DbType="NVarChar(MAX) NOT NULL", CanBeNull=false)]
		public string Gender
		{
			get
			{
				return this._Gender;
			}
			set
			{
				if ((this._Gender != value))
				{
					this.OnGenderChanging(value);
					this.SendPropertyChanging();
					this._Gender = value;
					this.SendPropertyChanged("Gender");
					this.OnGenderChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Relationship", DbType="NVarChar(MAX) NOT NULL", CanBeNull=false)]
		public string Relationship
		{
			get
			{
				return this._Relationship;
			}
			set
			{
				if ((this._Relationship != value))
				{
					this.OnRelationshipChanging(value);
					this.SendPropertyChanging();
					this._Relationship = value;
					this.SendPropertyChanged("Relationship");
					this.OnRelationshipChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_DriverLicense", DbType="NVarChar(MAX) NOT NULL", CanBeNull=false)]
		public string DriverLicense
		{
			get
			{
				return this._DriverLicense;
			}
			set
			{
				if ((this._DriverLicense != value))
				{
					this.OnDriverLicenseChanging(value);
					this.SendPropertyChanging();
					this._DriverLicense = value;
					this.SendPropertyChanged("DriverLicense");
					this.OnDriverLicenseChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Cooking", DbType="NVarChar(MAX) NOT NULL", CanBeNull=false)]
		public string Cooking
		{
			get
			{
				return this._Cooking;
			}
			set
			{
				if ((this._Cooking != value))
				{
					this.OnCookingChanging(value);
					this.SendPropertyChanging();
					this._Cooking = value;
					this.SendPropertyChanged("Cooking");
					this.OnCookingChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Party", DbType="NVarChar(MAX) NOT NULL", CanBeNull=false)]
		public string Party
		{
			get
			{
				return this._Party;
			}
			set
			{
				if ((this._Party != value))
				{
					this.OnPartyChanging(value);
					this.SendPropertyChanging();
					this._Party = value;
					this.SendPropertyChanged("Party");
					this.OnPartyChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Music1", DbType="NVarChar(MAX) NOT NULL", CanBeNull=false)]
		public string Music1
		{
			get
			{
				return this._Music1;
			}
			set
			{
				if ((this._Music1 != value))
				{
					this.OnMusic1Changing(value);
					this.SendPropertyChanging();
					this._Music1 = value;
					this.SendPropertyChanged("Music1");
					this.OnMusic1Changed();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Music2", DbType="NVarChar(MAX) NOT NULL", CanBeNull=false)]
		public string Music2
		{
			get
			{
				return this._Music2;
			}
			set
			{
				if ((this._Music2 != value))
				{
					this.OnMusic2Changing(value);
					this.SendPropertyChanging();
					this._Music2 = value;
					this.SendPropertyChanged("Music2");
					this.OnMusic2Changed();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Music3", DbType="NVarChar(MAX) NOT NULL", CanBeNull=false)]
		public string Music3
		{
			get
			{
				return this._Music3;
			}
			set
			{
				if ((this._Music3 != value))
				{
					this.OnMusic3Changing(value);
					this.SendPropertyChanging();
					this._Music3 = value;
					this.SendPropertyChanged("Music3");
					this.OnMusic3Changed();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Movie1", DbType="NVarChar(MAX) NOT NULL", CanBeNull=false)]
		public string Movie1
		{
			get
			{
				return this._Movie1;
			}
			set
			{
				if ((this._Movie1 != value))
				{
					this.OnMovie1Changing(value);
					this.SendPropertyChanging();
					this._Movie1 = value;
					this.SendPropertyChanged("Movie1");
					this.OnMovie1Changed();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Movie2", DbType="NVarChar(MAX) NOT NULL", CanBeNull=false)]
		public string Movie2
		{
			get
			{
				return this._Movie2;
			}
			set
			{
				if ((this._Movie2 != value))
				{
					this.OnMovie2Changing(value);
					this.SendPropertyChanging();
					this._Movie2 = value;
					this.SendPropertyChanged("Movie2");
					this.OnMovie2Changed();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Movie3", DbType="NVarChar(MAX) NOT NULL", CanBeNull=false)]
		public string Movie3
		{
			get
			{
				return this._Movie3;
			}
			set
			{
				if ((this._Movie3 != value))
				{
					this.OnMovie3Changing(value);
					this.SendPropertyChanging();
					this._Movie3 = value;
					this.SendPropertyChanged("Movie3");
					this.OnMovie3Changed();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_TV1", DbType="NVarChar(MAX) NOT NULL", CanBeNull=false)]
		public string TV1
		{
			get
			{
				return this._TV1;
			}
			set
			{
				if ((this._TV1 != value))
				{
					this.OnTV1Changing(value);
					this.SendPropertyChanging();
					this._TV1 = value;
					this.SendPropertyChanged("TV1");
					this.OnTV1Changed();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_TV2", DbType="NVarChar(MAX) NOT NULL", CanBeNull=false)]
		public string TV2
		{
			get
			{
				return this._TV2;
			}
			set
			{
				if ((this._TV2 != value))
				{
					this.OnTV2Changing(value);
					this.SendPropertyChanging();
					this._TV2 = value;
					this.SendPropertyChanged("TV2");
					this.OnTV2Changed();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_TV3", DbType="NVarChar(MAX) NOT NULL", CanBeNull=false)]
		public string TV3
		{
			get
			{
				return this._TV3;
			}
			set
			{
				if ((this._TV3 != value))
				{
					this.OnTV3Changing(value);
					this.SendPropertyChanging();
					this._TV3 = value;
					this.SendPropertyChanged("TV3");
					this.OnTV3Changed();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Personality", DbType="NVarChar(MAX) NOT NULL", CanBeNull=false)]
		public string Personality
		{
			get
			{
				return this._Personality;
			}
			set
			{
				if ((this._Personality != value))
				{
					this.OnPersonalityChanging(value);
					this.SendPropertyChanging();
					this._Personality = value;
					this.SendPropertyChanged("Personality");
					this.OnPersonalityChanged();
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.Compatibilities")]
	public partial class Compatibility : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _from_personality;
		
		private int _to_personality;
		
		private EntityRef<Personality> _Personality;
		
		private EntityRef<Personality> _Personality1;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void Onfrom_personalityChanging(int value);
    partial void Onfrom_personalityChanged();
    partial void Onto_personalityChanging(int value);
    partial void Onto_personalityChanged();
    #endregion
		
		public Compatibility()
		{
			this._Personality = default(EntityRef<Personality>);
			this._Personality1 = default(EntityRef<Personality>);
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_from_personality", DbType="Int NOT NULL", IsPrimaryKey=true)]
		public int from_personality
		{
			get
			{
				return this._from_personality;
			}
			set
			{
				if ((this._from_personality != value))
				{
					if (this._Personality.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.Onfrom_personalityChanging(value);
					this.SendPropertyChanging();
					this._from_personality = value;
					this.SendPropertyChanged("from_personality");
					this.Onfrom_personalityChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_to_personality", DbType="Int NOT NULL", IsPrimaryKey=true)]
		public int to_personality
		{
			get
			{
				return this._to_personality;
			}
			set
			{
				if ((this._to_personality != value))
				{
					if (this._Personality1.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.Onto_personalityChanging(value);
					this.SendPropertyChanging();
					this._to_personality = value;
					this.SendPropertyChanged("to_personality");
					this.Onto_personalityChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Personality_Compatibility", Storage="_Personality", ThisKey="from_personality", OtherKey="Id", IsForeignKey=true)]
		public Personality Personality
		{
			get
			{
				return this._Personality.Entity;
			}
			set
			{
				Personality previousValue = this._Personality.Entity;
				if (((previousValue != value) 
							|| (this._Personality.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._Personality.Entity = null;
						previousValue.Compatibilities.Remove(this);
					}
					this._Personality.Entity = value;
					if ((value != null))
					{
						value.Compatibilities.Add(this);
						this._from_personality = value.Id;
					}
					else
					{
						this._from_personality = default(int);
					}
					this.SendPropertyChanged("Personality");
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Personality_Compatibility1", Storage="_Personality1", ThisKey="to_personality", OtherKey="Id", IsForeignKey=true)]
		public Personality Personality1
		{
			get
			{
				return this._Personality1.Entity;
			}
			set
			{
				Personality previousValue = this._Personality1.Entity;
				if (((previousValue != value) 
							|| (this._Personality1.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._Personality1.Entity = null;
						previousValue.Compatibilities1.Remove(this);
					}
					this._Personality1.Entity = value;
					if ((value != null))
					{
						value.Compatibilities1.Add(this);
						this._to_personality = value.Id;
					}
					else
					{
						this._to_personality = default(int);
					}
					this.SendPropertyChanged("Personality1");
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.Personalities")]
	public partial class Personality : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _Id;
		
		private string _LongName;
		
		private string _ShortName;
		
		private EntitySet<Compatibility> _Compatibilities;
		
		private EntitySet<Compatibility> _Compatibilities1;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnIdChanging(int value);
    partial void OnIdChanged();
    partial void OnLongNameChanging(string value);
    partial void OnLongNameChanged();
    partial void OnShortNameChanging(string value);
    partial void OnShortNameChanged();
    #endregion
		
		public Personality()
		{
			this._Compatibilities = new EntitySet<Compatibility>(new Action<Compatibility>(this.attach_Compatibilities), new Action<Compatibility>(this.detach_Compatibilities));
			this._Compatibilities1 = new EntitySet<Compatibility>(new Action<Compatibility>(this.attach_Compatibilities1), new Action<Compatibility>(this.detach_Compatibilities1));
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Id", DbType="Int NOT NULL", IsPrimaryKey=true)]
		public int Id
		{
			get
			{
				return this._Id;
			}
			set
			{
				if ((this._Id != value))
				{
					this.OnIdChanging(value);
					this.SendPropertyChanging();
					this._Id = value;
					this.SendPropertyChanged("Id");
					this.OnIdChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_LongName", DbType="NVarChar(50) NOT NULL", CanBeNull=false)]
		public string LongName
		{
			get
			{
				return this._LongName;
			}
			set
			{
				if ((this._LongName != value))
				{
					this.OnLongNameChanging(value);
					this.SendPropertyChanging();
					this._LongName = value;
					this.SendPropertyChanged("LongName");
					this.OnLongNameChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ShortName", DbType="NVarChar(4) NOT NULL", CanBeNull=false)]
		public string ShortName
		{
			get
			{
				return this._ShortName;
			}
			set
			{
				if ((this._ShortName != value))
				{
					this.OnShortNameChanging(value);
					this.SendPropertyChanging();
					this._ShortName = value;
					this.SendPropertyChanged("ShortName");
					this.OnShortNameChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Personality_Compatibility", Storage="_Compatibilities", ThisKey="Id", OtherKey="from_personality")]
		public EntitySet<Compatibility> Compatibilities
		{
			get
			{
				return this._Compatibilities;
			}
			set
			{
				this._Compatibilities.Assign(value);
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Personality_Compatibility1", Storage="_Compatibilities1", ThisKey="Id", OtherKey="to_personality")]
		public EntitySet<Compatibility> Compatibilities1
		{
			get
			{
				return this._Compatibilities1;
			}
			set
			{
				this._Compatibilities1.Assign(value);
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
		
		private void attach_Compatibilities(Compatibility entity)
		{
			this.SendPropertyChanging();
			entity.Personality = this;
		}
		
		private void detach_Compatibilities(Compatibility entity)
		{
			this.SendPropertyChanging();
			entity.Personality = null;
		}
		
		private void attach_Compatibilities1(Compatibility entity)
		{
			this.SendPropertyChanging();
			entity.Personality1 = this;
		}
		
		private void detach_Compatibilities1(Compatibility entity)
		{
			this.SendPropertyChanging();
			entity.Personality1 = null;
		}
	}
}
#pragma warning restore 1591
